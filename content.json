{"meta":{"title":"安然不哭","subtitle":"西坝阿超个人博客","description":"西坝阿超、软件开发、","author":"西坝阿超","url":"https://xibaachao.github.io","root":"/"},"pages":[],"posts":[{"title":"LibreOffice转pdf","slug":"LibreOffice转pdf","date":"2020-09-01T08:07:04.583Z","updated":"2020-09-01T08:14:38.148Z","comments":true,"path":"2020/09/01/LibreOffice转pdf/","link":"","permalink":"https://xibaachao.github.io/2020/09/01/LibreOffice%E8%BD%ACpdf/","excerpt":"word 转pdf LibreOffice 转pdf","text":"word 转pdf LibreOffice 转pdf 1、安装环境12yum install libreofficeyum install libreoffice-headless 2、执行转换命令1soffice --headless --convert-to pdf &#123;文档路径&#125; --outdir &#123;导出目录路径&#125; 注意：如果中文会出现乱码问题，这个时候需要把Windows下的字体C:\\Windows\\Fonts下的常用字体，即simsun.ttc等复制到usr/share/fonts目录下。 3、在程序中执行命令1234567891011$retval = 1;// exec() might be disabled$cmd = 'export HOME=/tmp/ &amp;&amp; /usr/bin/libreoffice --headless --convert-to pdf 1.doc --outdir ./';if (function_exists('exec'))&#123; @exec($cmd, $output, $retval);&#125;// Did it work?if ($retval &gt; 0)&#123; exit('process_failed');&#125;echo 'success';","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"PHP删除文件夹及文件夹下的所有文件","slug":"PHP删除文件夹及文件夹下的所有文件","date":"2020-09-01T07:59:22.414Z","updated":"2020-09-01T08:08:13.979Z","comments":true,"path":"2020/09/01/PHP删除文件夹及文件夹下的所有文件/","link":"","permalink":"https://xibaachao.github.io/2020/09/01/PHP%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6/","excerpt":"php 删除文件操作","text":"php 删除文件操作 只删除文件夹包含的文件,不删除文件夹12345678910111213141516public function deldir($dir) &#123; //先删除目录下的文件： $dh = opendir($dir); while ($file = readdir($dh)) &#123; if($file != \".\" &amp;&amp; $file!=\"..\") &#123; $fullpath = $dir.\"/\".$file; if(!is_dir($fullpath)) &#123; unlink($fullpath); &#125; else &#123; deldir($fullpath); &#125; &#125; &#125; closedir($dh); &#125; 删除文件夹及文件夹下所有的文件12345678910111213141516171819202122public function deldir($dir) &#123; //先删除目录下的文件： $dh = opendir($dir); while ($file = readdir($dh)) &#123; if($file != \".\" &amp;&amp; $file!=\"..\") &#123; $fullpath = $dir.\"/\".$file; if(!is_dir($fullpath)) &#123; unlink($fullpath); &#125; else &#123; deldir($fullpath); &#125; &#125; &#125; closedir($dh); //删除当前文件夹： if(rmdir($dir)) &#123; return true; &#125; else &#123; return false; &#125;&#125; 创建文件夹并指定权限和编码123if (!is_dir($dir))&#123; //如果目录不存在 mkdir(iconv(\"UTF-8\", \"GBK\", $dir),0777,true); //创建目录,777权限,GBK编码格式&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"mysql生成数据库字典","slug":"mysql生成数据库字典","date":"2020-09-01T07:50:05.581Z","updated":"2020-09-01T07:50:58.703Z","comments":true,"path":"2020/09/01/mysql生成数据库字典/","link":"","permalink":"https://xibaachao.github.io/2020/09/01/mysql%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%97%E5%85%B8/","excerpt":"mysql 生成数据库字典 sql语句","text":"mysql 生成数据库字典 sql语句 12345678910111213SELECT t.TABLE_SCHEMA AS 库名, t.TABLE_NAME AS 表名, t.COLUMN_NAME AS 字段名, t.COLUMN_TYPE AS 数据类型, CASE IFNULL(t.COLUMN_DEFAULT,'Null') WHEN '' THEN '空字符串' WHEN 'Null' THEN 'NULL' ELSE t.COLUMN_DEFAULT END AS 默认值, CASE t.IS_NULLABLE WHEN 'YES' THEN '是' ELSE '否' END AS 是否允许为空, t.COLUMN_COMMENT AS 字段说明FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA='数据库名' AND t.TABLE_NAME='表名';","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"https://xibaachao.github.io/tags/Mysql/"}]},{"title":"go使用中国源","slug":"go使用中国源","date":"2020-09-01T06:56:37.646Z","updated":"2020-09-01T07:01:35.246Z","comments":true,"path":"2020/09/01/go使用中国源/","link":"","permalink":"https://xibaachao.github.io/2020/09/01/go%E4%BD%BF%E7%94%A8%E4%B8%AD%E5%9B%BD%E6%BA%90/","excerpt":"go 使用中国源","text":"go 使用中国源 配置环境：12345678go env -w GO111MODULE=on启用 Go Modules 功能go env -w GOPROXY=https://goproxy.cn,direct 七牛 CDNgo env -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct阿里 CDNgo env -w GOPROXY=https://goproxy.io,direct官方 CDN 注意！开启go modules 后 需要在项目中使用 go mod init 初始化不然要报错！！！！","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"GO","slug":"GO","permalink":"https://xibaachao.github.io/tags/GO/"}]},{"title":"ifarme F5 刷新","slug":"ifarme F5 刷新","date":"2020-08-28T07:28:19.629Z","updated":"2020-08-28T07:30:44.478Z","comments":true,"path":"2020/08/28/ifarme F5 刷新/","link":"","permalink":"https://xibaachao.github.io/2020/08/28/ifarme%20F5%20%E5%88%B7%E6%96%B0/","excerpt":"12345$(\"body\").bind(\"keydown\",function(event)&#123;if(event.keyCode == 116) &#123;event.preventDefault();//阻止默认刷新$(\"#main_frame\").attr(\"src\",window.frames[\"main_frame\"].src);&#125;","text":"12345$(\"body\").bind(\"keydown\",function(event)&#123;if(event.keyCode == 116) &#123;event.preventDefault();//阻止默认刷新$(\"#main_frame\").attr(\"src\",window.frames[\"main_frame\"].src);&#125; 12345$(\"body\").bind(\"keydown\",function(event)&#123;if(event.keyCode == 116) &#123;event.preventDefault();//阻止默认刷新$(\"#main_frame\").attr(\"src\",window.frames[\"main_frame\"].src);&#125; 重点就是这个event.preventDefault();//阻止默认刷新 其他你可以随意操作了","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"Laravel分页视图带参数","slug":"Laravel分页视图带参数","date":"2020-08-28T03:08:26.064Z","updated":"2020-08-28T03:14:22.774Z","comments":true,"path":"2020/08/28/Laravel分页视图带参数/","link":"","permalink":"https://xibaachao.github.io/2020/08/28/Laravel%E5%88%86%E9%A1%B5%E8%A7%86%E5%9B%BE%E5%B8%A6%E5%8F%82%E6%95%B0/","excerpt":"Laravel分页视图带参数 做列表筛选的时候，时常会遇到带参数分页的情况","text":"Laravel分页视图带参数 做列表筛选的时候，时常会遇到带参数分页的情况 在是视图中的代码 1&#123;&#123;$list-&gt;appends(['type'=&gt;$type])-&gt;links()&#125;&#125; 在调用links方法前先调用appends来设置需要的参数 生成后代码会是： 1/xxx?type=xxx&amp;page=1","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel 自定义分页返回数据","slug":"laravel 自定义分页返回数据","date":"2020-08-28T02:56:58.516Z","updated":"2020-08-28T03:08:04.456Z","comments":true,"path":"2020/08/28/laravel 自定义分页返回数据/","link":"","permalink":"https://xibaachao.github.io/2020/08/28/laravel%20%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/","excerpt":"laravel 自定义分页返回数据 在给前端返回数据的时候常常会用到分页，但是laravel 本身的分页函数会返回很多额外的数据，所以需要自定义些返回数据","text":"laravel 自定义分页返回数据 在给前端返回数据的时候常常会用到分页，但是laravel 本身的分页函数会返回很多额外的数据，所以需要自定义些返回数据 封装方法 1234567891011use Illuminate\\Contracts\\Pagination\\Paginator;function page_number(Paginator $paginator) &#123; return [ 'total' =&gt; $paginator-&gt;total(),//总条数 'page_size' =&gt; $paginator-&gt;perPage(),//每页的数据条数 'current_page' =&gt; $paginator-&gt;currentPage(),//当前页页码 'last_page' =&gt; $paginator-&gt;lastPage(),//最后一页的页码 'items'=&gt;$paginator-&gt;items()//分页后的数据 ]; &#125; 调用 12$data=DB:table(\"xxx\")-&gt;where($where)-&gt;select($columns)-&gt;paginate();return page_number($data);","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"webpack模块化开发","slug":"webpack模块化开发","date":"2020-08-27T05:59:32.466Z","updated":"2020-08-27T06:06:05.010Z","comments":true,"path":"2020/08/27/webpack模块化开发/","link":"","permalink":"https://xibaachao.github.io/2020/08/27/webpack%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91/","excerpt":"webpack 多模块开发 模板使用 公用模板使用","text":"webpack 多模块开发 模板使用 公用模板使用 安装html-loadernpm install html-loader 配置html-loader webpack.config.js 12345678910module: &#123; rules: [&#123; test: /\\.(tpl)$/, use:&#123; loader: 'html-loader', options: &#123; minimize: false &#125; &#125; &#125;] 注意！这里匹配的是.tpl的格式结尾的模板。 页面引入模板12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;%= require('./base/header.tpl') %&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"阿里大于-短信发送-sdk使用-PHP","slug":"阿里大于-短信发送-sdk使用-PHP","date":"2020-08-17T03:32:39.216Z","updated":"2020-08-17T03:32:39.216Z","comments":true,"path":"2020/08/17/阿里大于-短信发送-sdk使用-PHP/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E9%98%BF%E9%87%8C%E5%A4%A7%E4%BA%8E-%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81-sdk%E4%BD%BF%E7%94%A8-PHP/","excerpt":"","text":"安装sdk1composer require alibabacloud&#x2F;client 封装方法12345678910111213141516171819function sendphone($code,$phone)&#123; AlibabaCloud::accessKeyClient('AccessKeyId', 'AccessKeySecret')-&gt;regionId('cn-hangzhou')-&gt;asDefaultClient(); $result = AlibabaCloud::rpc() -&gt;product('Dysmsapi') -&gt;version('2017-05-25') -&gt;action('SendSms') -&gt;method('POST') -&gt;host('dysmsapi.aliyuncs.com') -&gt;options([ 'query' =&gt; [ 'PhoneNumbers' =&gt; $phone, 'SignName' =&gt; \"签名\", 'TemplateCode' =&gt; \"模板id\", 'TemplateParam'=&gt;'&#123;\"code\":\"'.$code.'\"&#125;' ], ]) -&gt;request(); return $result; &#125; 其他帮助官方SDK_DEMO 官方调试工具 本文更新，切正常使用时间 2020-1-1","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"读《爱，就注定了一生的漂泊》","slug":"读《爱，就注定了一生的漂泊》","date":"2020-08-17T03:32:39.215Z","updated":"2020-08-17T03:32:39.215Z","comments":true,"path":"2020/08/17/读《爱，就注定了一生的漂泊》/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E8%AF%BB%E3%80%8A%E7%88%B1%EF%BC%8C%E5%B0%B1%E6%B3%A8%E5%AE%9A%E4%BA%86%E4%B8%80%E7%94%9F%E7%9A%84%E6%BC%82%E6%B3%8A%E3%80%8B/","excerpt":"","text":"爱，就注定了一生的漂泊（刘墉）怎么来说呢！这个书的语言描述非常的爽，让人看后，觉得很爽。 这个书对人物，对事物，对风景，甚至是对石头，都在描写爱，对人，对人的周边，这些能读懂，但是后面的对风景，对一些死物，我就有点看不懂了，也是跳过看的。 让我对爱，有一些新的认识，但是我描述不出来，算是读着特别爽的那种！","categories":[{"name":"随笔","slug":"随笔","permalink":"https://xibaachao.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"读后感","slug":"读后感","permalink":"https://xibaachao.github.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"}]},{"title":"推荐使用vscode插件","slug":"推荐使用vscode插件","date":"2020-08-17T03:32:39.214Z","updated":"2020-08-17T03:32:39.214Z","comments":true,"path":"2020/08/17/推荐使用vscode插件/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8vscode%E6%8F%92%E4%BB%B6/","excerpt":"","text":"php开发 PHP Intelephense PHP IntelliSense","categories":[{"name":"随笔","slug":"随笔","permalink":"https://xibaachao.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://xibaachao.github.io/tags/%E5%85%B6%E4%BB%96/"}]},{"title":"查看docker容器错误","slug":"查看docker容器错误","date":"2020-08-17T03:32:39.214Z","updated":"2020-08-17T03:32:39.215Z","comments":true,"path":"2020/08/17/查看docker容器错误/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E6%9F%A5%E7%9C%8Bdocker%E5%AE%B9%E5%99%A8%E9%94%99%E8%AF%AF/","excerpt":"","text":"docker 查看容器错误1docker logs -f -t --tail 10 容器名称 //查看容器最后10条的日志记录","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"微信小程序跳转","slug":"微信小程序跳转","date":"2020-08-17T03:32:39.214Z","updated":"2020-08-17T03:32:39.214Z","comments":true,"path":"2020/08/17/微信小程序跳转/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B7%B3%E8%BD%AC/","excerpt":"微信小程序点击事件注册 传参等操作 微信小程序 页面跳转.wx.navigateTo(OBJECT)；.wx.redirectTo(OBJECT)；wx.switchTab(OBJECT)；wx.navigateBack(OBJECT)","text":"微信小程序点击事件注册 传参等操作 微信小程序 页面跳转.wx.navigateTo(OBJECT)；.wx.redirectTo(OBJECT)；wx.switchTab(OBJECT)；wx.navigateBack(OBJECT) wx.navigateTo跳转后可以返回前面的页面 123wx.navigateTo(&#123; url: 'xxx'&#125;) wx.redirectTo跳转后关闭前面的页面 123wx.redirectTo(&#123; url: 'xxx'&#125;) wx.switchTab跳转tabBar 页面 123wx.switchTab(&#123; url: 'xxx'&#125;) wx.navigateBack返回页面 1234wx.navigateBack(&#123; delta: 2&#125;)//后退2个页面","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"微信小程序开发","slug":"微信小程序开发","permalink":"https://xibaachao.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"}]},{"title":"普通项目webpack配置","slug":"普通项目webpack配置","date":"2020-08-17T03:32:39.214Z","updated":"2020-08-17T03:32:39.214Z","comments":true,"path":"2020/08/17/普通项目webpack配置/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E6%99%AE%E9%80%9A%E9%A1%B9%E7%9B%AEwebpack%E9%85%8D%E7%BD%AE/","excerpt":"","text":"个人使用webpack 配置 webpack 4.0 npm 主要是单页的开发，和小项目页面开发。主要是打包js package.json12345678910111213141516171819202122232425&#123; \"name\": \"test\", \"version\": \"1.0.0\", \"main\": \"index.js\", \"license\": \"MIT\", \"dependencies\": &#123; \"compass-mixins\": \"^0.12.10\", \"css-loader\": \"^3.4.2\", \"file-loader\": \"^5.0.2\", \"html-webpack-plugin\": \"^3.2.0\", \"mini-css-extract-plugin\": \"^0.9.0\", \"node-sass\": \"^4.13.1\", \"postcss-loader\": \"^3.0.0\", \"sass-loader\": \"^8.0.2\", \"ts-loader\": \"^6.2.1\", \"typescript\": \"^3.7.5\", \"url-loader\": \"^3.0.0\", \"webpack\": \"^4.41.5\", \"webpack-cli\": \"^3.3.10\", \"webpack-dev-server\": \"^3.10.1\" &#125;, \"scripts\": &#123; \"start\": \"webpack-dev-server\" &#125;&#125; webpack.config.js1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465const path = require('path');const MiniCssExtractPlugin = require('mini-css-extract-plugin');const HtmlWebpackPlugin = require('html-webpack-plugin');module.exports = &#123; entry: &#123; \"index\": \"./src/js/index.ts\", &#125;, output: &#123; path: path.resolve(__dirname, 'dist'), filename: \"./js/[name].js\" &#125;, plugins: [ new MiniCssExtractPlugin(&#123; filename: './css/[name].css', &#125;), new HtmlWebpackPlugin(&#123; filename: \"index.html\", template: \"./src/index.html\", chunks: [\"index\"] &#125;), ], module: &#123; rules: [&#123; test: /\\.scss$/, use: [&#123; loader: MiniCssExtractPlugin.loader, options: &#123; publicPath: '../', &#125; &#125;, &#123; loader: 'css-loader', &#125;, 'sass-loader', ], &#125;, &#123; test: /\\.(png|svg|jpg|gif)$/, use: [&#123; loader: 'url-loader', //是指定使用的loader和loader的配置参数 options: &#123; limit: 500, //是把小于500B的文件打成Base64的格式，写入JS name: './imgs/[name].[ext]', &#125; &#125;] &#125;, &#123; test: /\\.tsx?$/, use: 'ts-loader', exclude: /node_modules/, &#125;, ], &#125;, resolve: &#123; extensions: ['.tsx', '.ts', '.js'], &#125;, mode: \"production\", devServer: &#123; contentBase: path.join(__dirname, 'dist'), compress: true, port: 9000 &#125;&#125;; tsconfig.json12345678910&#123; \"compilerOptions\": &#123; \"outDir\": \"./dist/\", \"noImplicitAny\": true, \"module\": \"es6\", \"target\": \"es5\", \"jsx\": \"react\", \"allowJs\": true &#125;&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"前端代码热更新","slug":"前端代码热更新","date":"2020-08-17T03:32:39.213Z","updated":"2020-08-17T03:32:39.213Z","comments":true,"path":"2020/08/17/前端代码热更新/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E7%83%AD%E6%9B%B4%E6%96%B0/","excerpt":"","text":"前端代码热更新 安装环境 1yarn global add live-server 使用 进入站点目录 在终端命令下输入live-server 修改端口1live-server --port=80","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"微信小程序点击事件","slug":"微信小程序点击事件","date":"2020-08-17T03:32:39.213Z","updated":"2020-08-17T03:32:39.213Z","comments":true,"path":"2020/08/17/微信小程序点击事件/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/","excerpt":"微信小程序点击事件注册 传参等操作","text":"微信小程序点击事件注册 传参等操作 微信小程序点击事件(无参)view 视图文件 123&lt;view&gt; &lt;button bindtap=\"aaa\"&gt;&lt;/button&gt;&lt;/view&gt; js 文件 123aaa:function()&#123; .....&#125; 微信小程序点击事件(传参)view 视图文件 123&lt;view&gt; &lt;button bindtap=\"aaa\" data-id=\"1\"&gt;点击事件&lt;/button&gt;&lt;/view&gt; js 文件 1234aaa:function(e)&#123; let index=e.currentTarget.dataset.id&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"微信小程序开发","slug":"微信小程序开发","permalink":"https://xibaachao.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"}]},{"title":"前端预览文件（word,excl,ppt,pdf）","slug":"前端预览文件（word,excl,ppt,pdf）","date":"2020-08-17T03:32:39.213Z","updated":"2020-08-17T03:32:39.213Z","comments":true,"path":"2020/08/17/前端预览文件（word,excl,ppt,pdf）/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E5%89%8D%E7%AB%AF%E9%A2%84%E8%A7%88%E6%96%87%E4%BB%B6%EF%BC%88word,excl,ppt,pdf%EF%BC%89/","excerpt":"","text":"1、a标签预览1&lt;a href=\"文件地址\"&gt;点击下载&lt;/a&gt; 注： 好像只能预览pdf文件，而且还要看浏览器是否兼容，是否支持预览 2、js 插件插件：jquery.media.js 1234567891011121314&lt;script type=\"text/javascript\" src=\"jquery.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"jquery.media.js\"&gt;&lt;/script&gt;&lt;body&gt; &lt;div id=\"preview\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;script type=\"text/javascript\"&gt; $('#preview').media(&#123; width: '100%', height: '100%', autoplay:true, src:'文件地址' &#125;); &lt;/script&gt; 3、在线预览https://view.officeapps.live.com/op/view.aspx?src=网络地址 12&lt;iframe src&#x3D;&#39;https:&#x2F;&#x2F;view.officeapps.live.com&#x2F;op&#x2F;view.aspx?src&#x3D;网络地址&#39; width&#x3D;&#39;100%&#39; height&#x3D;&#39;100%&#39; frameborder&#x3D;&#39;1&#39;&gt;&lt;&#x2F;iframe&gt;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"修改docker容器源","slug":"修改docker容器源","date":"2020-08-17T03:32:39.212Z","updated":"2020-08-17T03:32:39.212Z","comments":true,"path":"2020/08/17/修改docker容器源/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E4%BF%AE%E6%94%B9docker%E5%AE%B9%E5%99%A8%E6%BA%90/","excerpt":"","text":"修改docker内部源12//进入容器后sed -i \"s@http://deb.debian.org@http://mirrors.aliyun.com@g\" /etc/apt/sources.list &amp;&amp; rm -Rf /var/lib/apt/lists/* &amp;&amp; cat /etc/apt/sources.list","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"停止、删除所有的docker容器和镜像","slug":"停止、删除所有的docker容器和镜像","date":"2020-08-17T03:32:39.212Z","updated":"2020-08-17T03:32:39.212Z","comments":true,"path":"2020/08/17/停止、删除所有的docker容器和镜像/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E5%81%9C%E6%AD%A2%E3%80%81%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E7%9A%84docker%E5%AE%B9%E5%99%A8%E5%92%8C%E9%95%9C%E5%83%8F/","excerpt":"","text":"docker停止和删除所有的容器和镜像停止所有的容器1docker stop $(docker ps -aq) 删除所有的容器1docker rm $(docker ps -aq) 删除所有的镜像1docker rmi $(docker images -q)","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"windows mac linux gopath配置","slug":"windows mac linux gopath配置","date":"2020-08-17T03:32:39.211Z","updated":"2020-08-17T03:32:39.211Z","comments":true,"path":"2020/08/17/windows mac linux gopath配置/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/windows%20mac%20linux%20gopath%E9%85%8D%E7%BD%AE/","excerpt":"","text":"MAC GOPATH 配置1、先创建一个go的工作目录 比如：/Users/你的用户名/app/go 2、编辑.bash_profile vim ~/.bash_profile 3、在.bash_profile中新增 1export GOPATH&#x3D;&#x2F;Users&#x2F;你的用户名&#x2F;app&#x2F;go 4、保存 5、在/Users/你的用户名/app/go 下分别建立 bin、src、pkg文件夹 windows GOPATH配置1、先创建一个go的工作目录，比如D:\\app\\go 2、右键计算机属性-&gt;系统高级设置-&gt;环境变量 3、添加或者修改GOPATH 路径如上图 4、确定 5、在go工作目录下分别建立 bin、src、pkg文件夹 LINUX GOPATH配置1、先创建一个go的工作目录，比如/home/app/go 2、编辑profile vim /etc/profile 3、配置go环境 123export GOROOT&#x3D;&#x2F;usr&#x2F;local&#x2F;go #设置为go安装的路径，有些安装包会自动设置默认的gorootexport GOPATH&#x3D;$HOME&#x2F;gocode #默认安装包的路径export PATH&#x3D;$PATH:$GOROOT&#x2F;bin:$GOPATH&#x2F;bin 4、生效profile (命令：source /etc/profile) 5、在go工作目录下分别建立 bin、src、pkg文件夹","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"GO","slug":"GO","permalink":"https://xibaachao.github.io/tags/GO/"}]},{"title":"为什么要写博客","slug":"为什么要写博客","date":"2020-08-17T03:32:39.211Z","updated":"2020-08-17T03:32:39.212Z","comments":true,"path":"2020/08/17/为什么要写博客/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"为什么要写博客 展示自我为什么要写博客！ 大家都知道自我展示分为很多种，比如发朋友圈、发抖音，写日志微博、博客、段子等，但是其中写博客是逼格最高的一种。 写博客的主要是炫耀，我的文笔，我的思想，我的成就，我的经验，哪怕写的不好，也能当做是自己的一个经验记录，我就是这样的，我是一个程序员，时常会遇到各种各样的问题。将这些问题都记录到自己的博客里面，以后在遇到这样的问题就可以快速找到解决方案。 分享知识不管在工作还是在生活中，我们总是会遇到各种各样的问题，也会累积各种各样的经验，但是我们不将这些经验记录下来，在我心里始终觉得就是一种浪费，不给别人留点什么，但是也应该给自己留点什么。这些经验知识都是无价之宝，都是我们在日常生活中交了不少学费的。只有经历了这些才会明白，才会有真实的体验。 当然我本身就是一个爱分享的人。我希望别人在遇到我所以遇到的问题的时候，能够少走些弯路，能够快速的搞定问题，提升自我。并且要加上自己的体会。 总结经验在工作中，我老是会遇到一些爱“问问题的人”，这就让我尴尬了，理论上来说，别人问你是看的起你，你应该给别人做认真解答的。但是你特么老是问老是问，就烦了，而且同一个问题要问好几次，提问方式也不一样，告诉过你的解决方案，自己不去总结下，就恶心。你说，我在心里面已经默默的总结过了，有卵用，过后，你特么不是还来问我吗，我那个去。。。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://xibaachao.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://xibaachao.github.io/tags/%E5%85%B6%E4%BB%96/"}]},{"title":"yarn安装及使用","slug":"yarn安装及使用","date":"2020-08-17T03:32:39.211Z","updated":"2020-08-17T03:32:39.211Z","comments":true,"path":"2020/08/17/yarn安装及使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/yarn%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/","excerpt":"","text":"yarn 安装注：需要先安装node.js 1npm install -g yarn Yarn 常用命令1yarn --version //查看版本 1yarn init //初始化 1yarn global add xxxx //全局安装 1yarn install //安装插件 1yarn add //添加包 1yarn publish //发布包 1yarn remove //移除包 1yarn upgrade //更新包 1yarn run //运行包 1yarn info &lt;packageName&gt; //查看包信息","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"win0 开机启动","slug":"win0 开机启动","date":"2020-08-17T03:32:39.210Z","updated":"2020-08-17T03:32:39.210Z","comments":true,"path":"2020/08/17/win0 开机启动/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/win0%20%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/","excerpt":"运行shell:startup","text":"运行shell:startup 运行shell:startup","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"win10 关闭休眠","slug":"win10 关闭休眠","date":"2020-08-17T03:32:39.210Z","updated":"2020-08-17T03:32:39.211Z","comments":true,"path":"2020/08/17/win10 关闭休眠/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/win10%20%E5%85%B3%E9%97%AD%E4%BC%91%E7%9C%A0/","excerpt":"运行powercfg -h off","text":"运行powercfg -h off 运行powercfg -h off","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"webpack常用loader和插件","slug":"webpack常用loader和插件","date":"2020-08-17T03:32:39.210Z","updated":"2020-08-17T03:32:39.210Z","comments":true,"path":"2020/08/17/webpack常用loader和插件/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/webpack%E5%B8%B8%E7%94%A8loader%E5%92%8C%E6%8F%92%E4%BB%B6/","excerpt":"","text":"url loader 配置图片使用base64 123456789101112131415161718npm install --save-dev url-loadermodule.exports = &#123; module: &#123; rules: [ &#123; test: /\\.(png|jpg|gif)$/, use: [ &#123; loader: 'url-loader', options: &#123; limit: 8192 &#125; &#125; ] &#125; ] &#125;&#125; https://www.webpackjs.com/loaders/url-loader/ babel-loader 文件预处理器(用来处理es6语法什么的) 123456789101112131415npm install babel-loader@8.0.0-beta.0 @babel/core @babel/preset-env webpackmodule: &#123; rules: [ &#123; test: /\\.js$/, exclude: /(node_modules|bower_components)/, use: &#123; loader: 'babel-loader', options: &#123; presets: ['@babel/preset-env'] &#125; &#125; &#125; ]&#125; https://www.webpackjs.com/loaders/babel-loader/ sass-loader sass 编译器 123456789101112131415npm install sass-loader node-sass webpack --save-devmodule.exports = &#123; module: &#123; rules: [&#123; test: /\\.scss$/, use: [&#123; loader: \"style-loader\" // 将 JS 字符串生成为 style 节点 &#125;, &#123; loader: \"css-loader\" // \b将 CSS 转化成 CommonJS 模块 &#125;, &#123; loader: \"sass-loader\" // 将 Sass 编译成 CSS &#125;] &#125;] &#125;&#125;; https://www.webpackjs.com/loaders/sass-loader/ mini-css-extract-plugin 将css提取到单独的文件 1234567891011121314151617181920212223242526272829npm install --save-dev mini-css-extract-pluginconst MiniCssExtractPlugin = require('mini-css-extract-plugin');module.exports = &#123; plugins: [ new MiniCssExtractPlugin(&#123; // Options similar to the same options in webpackOptions.output // both options are optional filename: '[name].css', chunkFilename: '[id].css', &#125;), ], module: &#123; rules: [ &#123; test: /\\.css$/, use: [ &#123; loader: MiniCssExtractPlugin.loader, options: &#123; publicPath: '/public/path/to/', &#125;, &#125;, 'css-loader', ], &#125;, ], &#125;,&#125;; https://github.com/webpack-contrib/mini-css-extract-plugin DefinePlugin 定义全局变量的 123456 plugins: [new webpack.DefinePlugin(&#123; &#39;url&#39;: &quot;xxx.com&quot; &#125;); ], https://webpack.docschina.org/plugins/define-plugin/ htmlwebpackplugin html构建工具 123456789101112npm install --save-dev html-webpack-pluginvar HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);var path &#x3D; require(&#39;path&#39;);module.exports &#x3D; &#123; entry: &#39;index.js&#39;, output: &#123; path: path.resolve(__dirname, &#39;.&#x2F;dist&#39;), filename: &#39;index_bundle.js&#39; &#125;, plugins: [new HtmlWebpackPlugin()]&#125;; https://webpack.docschina.org/plugins/html-webpack-plugin/","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"webpack配置使用","slug":"webpack配置使用","date":"2020-08-17T03:32:39.210Z","updated":"2020-08-17T03:32:39.210Z","comments":true,"path":"2020/08/17/webpack配置使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/webpack%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/","excerpt":"","text":"webpack 配置文件说明webpack.config.js 简易配置12345678const path=require('path');module.exports=&#123; entry:\"\",//入口文件 output:&#123;//输出文件 path:path.resolve(__dirname,\"dist\"),//指定目录 filename:\"xxxx.js\",//文件名 &#125;&#125; 多入口配置1234567891011const path&#x3D;require(&#39;path&#39;);module.exports&#x3D;&#123; entry:&#123; home:&quot;.&#x2F;home.js&quot;, welcome:&quot;.&#x2F;welcome.js&quot; &#125;, output:&#123;&#x2F;&#x2F;输出文件 path:path.resolve(__dirname,&quot;dist&quot;),&#x2F;&#x2F;指定目录 filename:&quot;[name].js&quot;,&#x2F;&#x2F;文件名 &#125;&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"thinkphp5.1验证码使用","slug":"thinkphp5.1验证码使用","date":"2020-08-17T03:32:39.209Z","updated":"2020-08-17T03:32:39.209Z","comments":true,"path":"2020/08/17/thinkphp5.1验证码使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/thinkphp5.1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%BD%BF%E7%94%A8/","excerpt":"","text":"安装插件12composer require topthink&#x2F;think-captcha &#x2F;&#x2F;thinkphp5.0composer require topthink&#x2F;think-captcha&#x3D;2.0.* &#x2F;&#x2F;thinkphp5.1 生成验证码123456789use think\\captcha\\Captcha;&#x2F;&#x2F;引入包public function verify() &#123; $captcha &#x3D; new Captcha(); $captcha-&gt;fontSize &#x3D; 30; $captcha-&gt;length &#x3D; 4; $captcha-&gt;useNoise &#x3D; false; return $captcha-&gt;entry(&quot;captcha&quot;);&#x2F;&#x2F;生成验证码，并打个标签&#125; 前端展示1&lt;img src&#x3D;&quot;&#123;:url(&#39;admin&#x2F;tool&#x2F;verify&#39;)&#125;&quot; onclick&#x3D;&quot;this.src&#x3D;this.src+&#39;&amp;&#39;+Math.random()&quot; width&#x3D;&quot;120&quot; height&#x3D;&quot;40&quot; &gt; 后端检查12345$captcha &#x3D; new Captcha(); if(!$captcha-&gt;check(input(&quot;vercode&quot;),&quot;captcha&quot;)) &#123; return [&quot;code&quot;&#x3D;&gt;-1,&quot;msg&quot;&#x3D;&gt;&quot;验证码错误&quot;]; &#125; 注：input(“vercode”);//用户输入的验证码captcha；//为什么生成验证码时候打的标签 更多看官方thinkphp5.1 thinkphp5.0","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"ueditor挡住下拉框","slug":"ueditor挡住下拉框","date":"2020-08-17T03:32:39.209Z","updated":"2020-08-28T03:26:28.164Z","comments":true,"path":"2020/08/17/ueditor挡住下拉框/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/ueditor%E6%8C%A1%E4%BD%8F%E4%B8%8B%E6%8B%89%E6%A1%86/","excerpt":"ueditor 由于z-index设置过高的问题，时常会挡住其他的表单元素","text":"ueditor 由于z-index设置过高的问题，时常会挡住其他的表单元素 临时修改12345678&lt;div class=\"layui-form-item\" style=\"position: relative;z-index: 10000;\"&gt; &lt;select name=\"cid\" lay-verify=\"cid\" required id=\"L_cid\"&gt; &lt;option value=\"\" &gt;请选择&lt;/option&gt; &lt;/select&gt;&lt;/div&gt;//style=\"position: relative;z-index: 10000;\" 修改全局在config.js文件里搜索zIndex 在这里就可以修改它的层数 改为0就可以了","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"phpmyadmin登录时指定服务器ip和端口的方法","slug":"phpmyadmin登录时指定服务器ip和端口的方法","date":"2020-08-17T03:32:39.208Z","updated":"2020-08-17T03:32:39.208Z","comments":true,"path":"2020/08/17/phpmyadmin登录时指定服务器ip和端口的方法/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/phpmyadmin%E7%99%BB%E5%BD%95%E6%97%B6%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E5%99%A8ip%E5%92%8C%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%96%B9%E6%B3%95/","excerpt":"","text":"phpmyadmin登录时指定服务器ip和端口的方法 在phpmyadmin 目录 libraries/config.default.php 将$cfg[&#39;AllowArbitraryServer&#39;]=false修改成$cfg[&#39;AllowArbitraryServer&#39;]=true","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"https://xibaachao.github.io/tags/Mysql/"}]},{"title":"php扩展imagemagick-Docker安装","slug":"php扩展imagemagick-Docker安装","date":"2020-08-17T03:32:39.208Z","updated":"2020-08-17T03:32:39.208Z","comments":true,"path":"2020/08/17/php扩展imagemagick-Docker安装/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/php%E6%89%A9%E5%B1%95imagemagick-Docker%E5%AE%89%E8%A3%85/","excerpt":"","text":"创建PHP DOCKER容器进入php容器后 123apt-get update apt-get install -y libmagickwand-6.q16-dev --no-install-recommends rm -rf /var/lib/apt/lists/* 安装插件所需要的环境 12pecl install imagick-3.4.3 docker-php-ext-enable imagick 安装插件（目前最高版本为3.4.4）","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"samba配置、文件共享配置","slug":"samba配置、文件共享配置","date":"2020-08-17T03:32:39.208Z","updated":"2020-08-17T03:32:39.208Z","comments":true,"path":"2020/08/17/samba配置、文件共享配置/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/samba%E9%85%8D%E7%BD%AE%E3%80%81%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E9%85%8D%E7%BD%AE/","excerpt":"","text":"samba 配置以及使用 yum install samba 安装samba服务器 配置文件（ vim /etc/samba/smb.conf） 123456789101112131415161718[global] workgroup = MYGROUP server string = Samba Server Version %v security = user passdb backend = tdbsam load printers = yes cups options = raw[homes] comment = Home Directories browseable = no writable = yes[printers] comment = All Printers path = /var/spool/samba browseable = no guest ok = no writable = no printable = yes 修改： workgroup=MYGROUP 修改成 WORKGROUP 添加代码 [share] comment = share all path = /tmp/samba browseable = yes public = yes writable = yes 1234 &gt; path 表示目录设置访问账号密码 smbpasswd -a 用户 // 设置访问密码 开机启动 chkconfig smb on systemctl start smb.service 注意事项 1、如果访问不到，请先关闭防火墙。 2、通过 vim /etc/sysconfig/selinux 把 SELINUX=enforcing 修改为SELINUX= disable 退出保存","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"thinkphp 扩展配置文件","slug":"thinkphp 扩展配置文件","date":"2020-08-17T03:32:39.208Z","updated":"2020-08-17T03:32:39.209Z","comments":true,"path":"2020/08/17/thinkphp 扩展配置文件/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/thinkphp%20%E6%89%A9%E5%B1%95%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","excerpt":"","text":"thinkphp5.0 配置扩展独立的配置文件在config/app.php中配置 1'extra_config_list'=&gt; ['data'] 配置完成后你就可以在config文件夹下建立data.php 1234return [ // 类型 'type' =&gt; ['xxx','xxx'], ]; 到此你就在你的代码中调用$type=config(&quot;type&quot;);或者Config::get(&#39;data.type&#39;); 以上网络找的解决方案 thinkphp5.1 独立配置文件读取在config/下建立一个php文件，如data.php 1234&lt;?phpreturn [ \"peopletype\"=&gt;['专家','人才']]; 如何读取！ 12&#123;~$temp=config(\"data.peopletype\")&#125; //视图中读取$temp=config(\"data.peopletype\");//控制器读取","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"npm常用命令","slug":"npm常用命令","date":"2020-08-17T03:32:39.207Z","updated":"2020-08-17T03:32:39.207Z","comments":true,"path":"2020/08/17/npm常用命令/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"​ npm install -g cnpm --registry=https://registry.npm.taobao.org","text":"​ npm install -g cnpm --registry=https://registry.npm.taobao.org 常用命令 npm install xxx 安装 npm install xxx -g 全局安装 npm install xxx -save 安装并写入package.json的”dependencies”中 就是写入到生存环境中 npm install xxx –save-dev 安装并写入package.json的”devDependencies”中 写入到开发环境中 npm uninstall xxx 删除xxx依赖 npm uninstall xxx -g 删除全局依赖 npm cache clean 清除缓存 关于dependencies与devDependencies dependencies 表示我们要在生产环境下使用该依赖 devDependencies 则表示我们仅在开发环境使用该依赖。","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"php html代码转义","slug":"php html代码转义","date":"2020-08-17T03:32:39.207Z","updated":"2020-08-17T03:32:39.207Z","comments":true,"path":"2020/08/17/php html代码转义/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/php%20html%E4%BB%A3%E7%A0%81%E8%BD%AC%E4%B9%89/","excerpt":"","text":"php html代码转义与反转义主要是使用两个函数 12$a = htmlentities($orig); $b = html_entity_decode($a);","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"php","slug":"php","permalink":"https://xibaachao.github.io/tags/php/"}]},{"title":"nginx http跳转到https","slug":"nginx http跳转到https","date":"2020-08-17T03:32:39.206Z","updated":"2020-08-17T03:32:39.206Z","comments":true,"path":"2020/08/17/nginx http跳转到https/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/nginx%20http%E8%B7%B3%E8%BD%AC%E5%88%B0https/","excerpt":"","text":"nginx http 跳转到https123456789101112131415server &#123; listen 80; server_name www.0305.ink; location / &#123; root /usr/share/nginx/www.0305.ink/; index index.php index.html; return 301 https://$server_name$request_uri; &#125; location ~ \\.php$ &#123; fastcgi_pass php7:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /var/www/www.0305.ink/$fastcgi_script_name; include fastcgi_params; &#125;&#125;","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://xibaachao.github.io/tags/nginx/"}]},{"title":"nginx负载均衡配置","slug":"nginx负载均衡配置","date":"2020-08-17T03:32:39.206Z","updated":"2020-08-17T03:32:39.207Z","comments":true,"path":"2020/08/17/nginx负载均衡配置/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE/","excerpt":"","text":"nginx 负载均衡配置及介绍什么是负载均衡负载均衡说白了就一个反向代理，看下图。 为什么要使用负载均衡1、解决高并发压力，提高web应用处理性能 负载均衡模式 1、默认模式（轮询） 2、权重模式 3、ip_hash 4、url_hash 5、第三发 默认模式12345678910111213http&#123; upstream temp &#123; //格式:upstream 名称 server 10.10.1.1:80; server 10.10.1.2:80; server example.com:80; //格式:域名+端口 或者 ip+端口 &#125; server&#123; listen 80; location / &#123; proxy_pass http://temp; &#125; &#125;&#125; 注：就是挨个访问，如果某个服务器宕机，那么就会跳过 权重模式123456789101112http&#123; upstream temp &#123; server 10.10.1.1:80 weight&#x3D;3; server 10.10.1.2:80 weight&#x3D;7; &#125; server&#123; listen 80; location &#x2F; &#123; proxy_pass http:&#x2F;&#x2F;temp; &#125; &#125;&#125; 注：就是指定几率访问，比如weight=7 那么70%的流量就会走这台服务器 ip_hash12345678910111213http&#123; upstream temp &#123; ip_hash; server 10.10.1.1:80; server 10.10.1.2:80; &#125; server&#123; listen 80; location / &#123; proxy_pass http://temp; &#125; &#125;&#125; 注：ip_hash 会通过用户的ip定位服务器，比如：用户访问了A服务器，已经登录过了，已存在session。如果不是使用ip_hash那么就有可能会访问到B服务器，那么这个时候的session就会出现问题。当然我这里只是打个比方，一般用了负载均衡session都是要共享的，或者是使用radis来管理session url_hash12345678910111213http&#123; upstream temp &#123; hash $request_uri； server 10.10.1.1:80; server 10.10.1.2:80; &#125; server&#123; listen 80; location / &#123; proxy_pass http://temp; &#125; &#125;&#125; 注：url_hash 会通过用户访问的url定位服务器。此模式需要使用高版本nginx，低版本需要自己安装扩展！ 第三方（fair）12345678910111213http&#123; upstream temp &#123; fair; server 10.10.1.1:80; server 10.10.1.2:80; &#125; server&#123; listen 80; location / &#123; proxy_pass http://temp; &#125; &#125;&#125; 注：哪台服务器响应快就访问哪台服务器！ 其他常用配置说明12345678910111213141516http&#123; upstream temp &#123; ip_hash; server 10.10.1.1:80 down;&#x2F;&#x2F;表示这台服务器不参与负载 server 10.10.1.3:80 backup;&#x2F;&#x2F;表示这台服务器在其他服务器都宕机或者忙的时候在参与负载（不包含 down） server 10.10.1.3:80 max_fails&#x3D;1;&#x2F;&#x2F;表示最大请求失败数，比如访问失败一次就跳过该服务器 server 10.10.1.4:80 fail_timeout&#x3D;5s;&#x2F;&#x2F;发生错误暂停5秒 server 10.10.1.5:80 &#125; server&#123; listen 80; location &#x2F; &#123; proxy_pass http:&#x2F;&#x2F;temp; &#125; &#125;&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"mac国内安装homebrew","slug":"mac国内安装homebrew","date":"2020-08-17T03:32:39.205Z","updated":"2020-08-17T03:32:39.205Z","comments":true,"path":"2020/08/17/mac国内安装homebrew/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/mac%E5%9B%BD%E5%86%85%E5%AE%89%E8%A3%85homebrew/","excerpt":"","text":"获取brew install文件1https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install 编辑install文件将 12BREW_REPO = “https://github.com/Homebrew/brew“.freezeCORE_TAP_REPO = “https://github.com/Homebrew/homebrew-core“.freeze 替换成 12BREW_REPO = “https://mirrors.ustc.edu.cn/brew.git “.freezeCORE_TAP_REPO = “https://mirrors.ustc.edu.cn/homebrew-core.git“.freeze 执行脚本","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"mysql5远程访问","slug":"mysql5远程访问","date":"2020-08-17T03:32:39.205Z","updated":"2020-08-17T03:32:39.205Z","comments":true,"path":"2020/08/17/mysql5远程访问/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/mysql5%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/","excerpt":"","text":"1234登录到mysql数据库use mysql;GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;flush privileges;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"https://xibaachao.github.io/tags/Mysql/"}]},{"title":"mysql8 开启远程连接","slug":"mysql8 开启远程连接","date":"2020-08-17T03:32:39.205Z","updated":"2020-08-17T03:32:39.206Z","comments":true,"path":"2020/08/17/mysql8 开启远程连接/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/mysql8%20%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/","excerpt":"","text":"第一步1mysql -u root -p ‘原来的密码’ 第二步1use mysql; 第三步123CREATE USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;你的密码&#39;;GRANT ALL ON *.* TO &#39;root&#39;@&#39;%&#39;;ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;你的密码&#39;; 第四步1FLUSH PRIVILEGES;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"https://xibaachao.github.io/tags/Mysql/"}]},{"title":"laravel数据库导出","slug":"laravel数据库导出","date":"2020-08-17T03:32:39.204Z","updated":"2020-08-17T03:32:39.204Z","comments":true,"path":"2020/08/17/laravel数据库导出/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%87%BA/","excerpt":"","text":"安装扩展 orangehill/iseed1composer require orangehill/iseed 把iseed加入到服务提供者在laravel项目目录 config/app.php 添加providers 1234'providers' =&gt; [ ... Orangehill\\Iseed\\IseedServiceProvider::class,], 导出单表1php artisan iseed 表名 导出多表1php artisan iseed 表1,表2 导出数据并且强制覆盖1php artisan iseed 表名1,表名2 --force 导出其他数据库的数据1php artisan iseed 表名--database=数据库名","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"linux解压缩问题","slug":"linux解压缩问题","date":"2020-08-17T03:32:39.204Z","updated":"2020-08-17T03:32:39.204Z","comments":true,"path":"2020/08/17/linux解压缩问题/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/linux%E8%A7%A3%E5%8E%8B%E7%BC%A9%E9%97%AE%E9%A2%98/","excerpt":"关于linux解压缩命令！这里推荐使用zip和 unzip","text":"关于linux解压缩命令！这里推荐使用zip和 unzip zip 命令：zip xxx.zip xxx.txt 它会将 xxx.txt 文件压缩为 xxx.zip ，当然也可以指定压缩包的目录，例如 /root/test.zip unzipunzip test.zip 它会默认将文件解压到当前目录，如果要解压到指定目录，可以加上 -d 选项 unzip test.zip -d /home/ 注意如果发现unzip找不到这个命令，就执行 yum install -y unzip zip","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://xibaachao.github.io/tags/linux/"}]},{"title":"layui 表格值替换","slug":"layui 表格值替换","date":"2020-08-17T03:32:39.204Z","updated":"2020-08-17T03:32:39.204Z","comments":true,"path":"2020/08/17/layui 表格值替换/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/layui%20%E8%A1%A8%E6%A0%BC%E5%80%BC%E6%9B%BF%E6%8D%A2/","excerpt":"","text":"自定义模板1234567891011121314151617181920cols: [ [&#123; field: 'id', title: '编号' &#125;, &#123; field: 'title', title: '姓名' &#125;, &#123; field: 'column', title: '栏目', templet:\"#temp\" &#125;, &#123; field: 'sort', title: '排序' &#125;,&#123; templet: '#opera', title: '操作' &#125;] ] 上面的代码是一段渲染表头的代码！ 在栏目那一列 自定义了一个temp的模板 1234567&lt;script id=\"temp\"&gt; &#123;&#123;# if (d.column=== 0) &#123; &#125;&#125; 专家 &#123;&#123;# &#125; else &#123; &#125;&#125; 人才 &#123;&#123;# &#125; &#125;&#125;&lt;/script&gt; 具体模板引擎语法可以点击下面的连接 https://www.layui.com/doc/modules/laytpl.html","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"layui-table使用、分页使用","slug":"layui-table使用、分页使用","date":"2020-08-17T03:32:39.204Z","updated":"2020-08-17T03:32:39.204Z","comments":true,"path":"2020/08/17/layui-table使用、分页使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/layui-table%E4%BD%BF%E7%94%A8%E3%80%81%E5%88%86%E9%A1%B5%E4%BD%BF%E7%94%A8/","excerpt":"","text":"图片 前端代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495&lt;div class=\"layui-fluid\"&gt; &lt;div class=\"layui-card\"&gt; &lt;div class=\"layui-form layui-card-header layuiadmin-card-header-auto\"&gt; &lt;div class=\"layui-form-item\" lay-filter=\"search_from\"&gt; &lt;div class=\"layui-inline\"&gt; &lt;label class=\"layui-form-label\"&gt;关键字&lt;/label&gt; &lt;div class=\"layui-input-inline\"&gt; &lt;input type=\"text\" name=\"key\" placeholder=\"请输入\" autocomplete=\"off\" class=\"layui-input\"&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"layui-inline\"&gt; &lt;button class=\"layui-btn layuiadmin-btn-list\" lay-submit lay-filter=\"search\"&gt; &lt;i class=\"layui-icon layui-icon-search layuiadmin-button-btn\"&gt;&lt;/i&gt; &lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"layui-card-body\"&gt; &lt;div style=\"padding-bottom: 10px;\"&gt; &lt;button class=\"layui-btn layuiadmin-btn-list\" data-type=\"batchdel\" id=\"refresh\"&gt;刷新&lt;/button&gt; &lt;button class=\"layui-btn layuiadmin-btn-list\" data-type=\"add\" id=\"add\"&gt;添加&lt;/button&gt; &lt;/div&gt; &lt;table id=\"list\" lay-filter=\"list\"&gt;&lt;/table&gt; &lt;script type=\"text/html\" id=\"opera\"&gt; &lt;a class=\"layui-btn layui-btn-normal layui-btn-xs\" lay-event=\"edit\"&gt;&lt;i class=\"layui-icon layui-icon-edit\"&gt;&lt;/i&gt;编辑&lt;/a&gt; &lt;a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\"&gt;&lt;i class=\"layui-icon layui-icon-delete\"&gt;&lt;/i&gt;删除&lt;/a&gt; &lt;/script&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;script src=\"/layuiadmin/layui/layui.js\"&gt;&lt;/script&gt;&lt;script&gt; layui.config(&#123; base: '/layuiadmin/' &#125;).use(['table'], function () &#123; var table = layui.table, form = layui.form, $ = layui.$; form.on('submit(search)', function (data) &#123; table.reload(\"list\", &#123; page: &#123; curr: 0 &#125;, where: data.field &#125;) &#125;); var renderTable = function () &#123; table.render(&#123; elem: '#list', method: \"post\", where: &#123; \"_token\": \"&#123;&#123;csrf_token()&#125;&#125;\" //其他参数 &#125;, url: '&#123;&#123;route(\"admin.admin.data\")&#125;&#125;', page: true, response: &#123;&#125;, done: function (res, curr, count) &#123; &#125;, limit: 30, cols: [ [&#123; field: 'id', title: '编号' &#125;, &#123; field: 'username', title: '姓名' &#125;, &#123; templet: '#opera', title: '操作' &#125;] ] &#125;); &#125;; renderTable(); table.on('tool(list)', function (obj) &#123; var data = obj.data; var layEvent = obj.event; if (layEvent === 'del') &#123; //执行删除的方法 &#125; if (layEvent === \"edit\") &#123; //执行编辑的方法 &#125; &#125;) $('#refresh').click(function () &#123; renderTable(); &#125;); $('#add').click(function () &#123; //添加的方法 &#125;); &#125;);&lt;/script&gt; 后端数据返回格式123456789&#123; \"code\": 0,//必须为0 \"data\": [&#123; \"id\": 1, \"username\": \"admin\" &#125;], \"msg\": \"请求成功\", \"count\": 1 //数据总量&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"laravel常用命令使用","slug":"laravel常用命令使用","date":"2020-08-17T03:32:39.203Z","updated":"2020-08-17T03:32:39.203Z","comments":true,"path":"2020/08/17/laravel常用命令使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/","excerpt":"","text":"123456789101112131415php artisan make:model Models/Admin -m //创建model并创建表php artisan make:controller Admin/DashboardController -r//创建controllerphp artisan make:request AdminLoginRequest //生成一个requestphp artisan make:seed AdminsTableSeeder //填充数据php artisan migrate //创建表php artisan db:seed //填充数据php artisan db:seed --class=UsersTableSeeder //指定填充数据 php artisan make:middleware xxxx //创建中间件","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel常用路由","slug":"laravel常用路由","date":"2020-08-17T03:32:39.203Z","updated":"2020-08-17T03:32:39.203Z","comments":true,"path":"2020/08/17/laravel常用路由/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%E5%B8%B8%E7%94%A8%E8%B7%AF%E7%94%B1/","excerpt":"","text":"路由分组123Route::middleware(['user', 'admin'])-&gt;group(function () &#123;&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel修改器的使用","slug":"laravel修改器的使用","date":"2020-08-17T03:32:39.203Z","updated":"2020-08-17T03:32:39.203Z","comments":true,"path":"2020/08/17/laravel修改器的使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%E4%BF%AE%E6%94%B9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/","excerpt":"","text":"laravel 访问器使用在你的模型上，定义访问器，需要创建一个getXxxAttribute方法。需要访问的Xxxx为字段名，这里需要使用大驼峰法命名法（列如：name 需要命名为：Name ；my_name需要命名为：MyName） 列： 1234567891011121314151617&lt;?phpnamespace App\\Models;use Illuminate\\Database\\Eloquent\\Model;class Admin extends Model&#123; use Notifiable; protected $fillable = [ 'username', 'password','remember_token' ]; protected $hidden = [ 'password','remember_token' ]; //获取头像 function getHeadimg($value)&#123; return config(\"url\").$value; &#125;&#125; 注：获取用户头像的时候，把url加上 laravel修改器使用在你的模型上，定义访问器，需要创建一个setXxxAttribute方法。需要访问的Xxxx为字段名，这里需要使用大驼峰法命名法（列如：name 需要命名为：Name ；my_name需要命名为：MyName） 列： 123456789101112131415161718&lt;?phpnamespace App\\Models;use Illuminate\\Database\\Eloquent\\Model;class Admin extends Model&#123; use Notifiable; protected $fillable = [ 'username', 'password','remember_token' ]; protected $hidden = [ 'password','remember_token' ]; //登录密码加密 function setpasswordAttribute($value) &#123; $this-&gt;attributes['password']=encrypt($value); &#125;&#125; 注：添加或者修改用户的时候，加密登录密码","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel 创建数据表命令","slug":"laravel 创建数据表命令","date":"2020-08-17T03:32:39.202Z","updated":"2020-08-17T03:32:39.202Z","comments":true,"path":"2020/08/17/laravel 创建数据表命令/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"创建表1php artisan make:migration create_表名_table 建表语句12345678910111213public function up()&#123; Schema::create('user', function (Blueprint $table) &#123; $table-&gt;bigIncrements('id')-&gt;comment(\"编号\"); $table-&gt;string(\"name\")-&gt;comment(\"姓名\"); $table-&gt;string(\"password\")-&gt;comment(\"密码\"); $table-&gt;string(\"phone\")-&gt;comment(\"电话号码\"); $table-&gt;integer(\"pid\")-&gt;comment(\"对应职务id\"); $table-&gt;integer(\"aid\")-&gt;comment(\"负责区域id\"); $table-&gt;timestamps(); &#125;); Illuminate\\Support\\Facades\\DB::statement(\"ALTER TABLE `user` comment '用户表'\");&#125; 从上面的语句就可以看出表结构的语法，当然这里只是简单的写了一个表 具体可以查看laravel的数据库迁移文档 https://learnku.com/docs/laravel/6.x/migrations/5173","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel 转义","slug":"laravel 转义","date":"2020-08-17T03:32:39.202Z","updated":"2020-08-17T03:32:39.202Z","comments":true,"path":"2020/08/17/laravel 转义/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%20%E8%BD%AC%E4%B9%89/","excerpt":"在使用富文本框编写数据存入数据库，在前端读取数据发现直接将html代码直接显示在了页面上。。。。","text":"在使用富文本框编写数据存入数据库，在前端读取数据发现直接将html代码直接显示在了页面上。。。。 解决办法： {! $one-&gt;body !}","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel7找不到AuthenticatesUsers","slug":"laravel7找不到AuthenticatesUsers","date":"2020-08-17T03:32:39.202Z","updated":"2020-08-17T03:32:39.202Z","comments":true,"path":"2020/08/17/laravel7找不到AuthenticatesUsers/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel7%E6%89%BE%E4%B8%8D%E5%88%B0AuthenticatesUsers/","excerpt":"Trait ‘Illuminate\\Foundation\\Auth\\AuthenticatesUsers’ not found","text":"Trait ‘Illuminate\\Foundation\\Auth\\AuthenticatesUsers’ not found 1composer require laravel/ui","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"laravel 用户认证","slug":"laravel 用户认证","date":"2020-08-17T03:32:39.202Z","updated":"2020-08-17T03:32:39.202Z","comments":true,"path":"2020/08/17/laravel 用户认证/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%20%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/","excerpt":"","text":"laravel 用户认证 多用户认证 创建表 123456789101112//php artisan make:migration create_User_tableSchema::create('users', function (Blueprint $table) &#123; $table-&gt;bigIncrements('id')-&gt;comment(\"编号\"); $table-&gt;string(\"name\")-&gt;comment(\"姓名\"); $table-&gt;string(\"password\")-&gt;comment(\"密码\"); $table-&gt;string(\"phone\")-&gt;comment(\"电话号码\"); $table-&gt;integer(\"pid\")-&gt;comment(\"对应职务id\"); $table-&gt;integer(\"aid\")-&gt;comment(\"负责区域id\"); $table-&gt;rememberToken(); $table-&gt;timestamps();&#125;);//php artisan migrate 填充数据 123456789//php artisan make:seed UserTableSeeder User::insert([ \"name\"=&gt;\"钟建超\", \"password\"=&gt;bcrypt(\"123\"), \"phone\"=&gt;\"123\", \"pid\"=&gt;1, \"aid\"=&gt;1]);//php artisan db:seed","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"js点击更新验证码","slug":"js点击更新验证码","date":"2020-08-17T03:32:39.201Z","updated":"2020-08-17T03:32:39.201Z","comments":true,"path":"2020/08/17/js点击更新验证码/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/js%E7%82%B9%E5%87%BB%E6%9B%B4%E6%96%B0%E9%AA%8C%E8%AF%81%E7%A0%81/","excerpt":"","text":"在工作我们经常会用验证码来预防别人恶意提交，所以点击更新验证码和刷新验证码是比较常用的。 而以下代码就是我们常用的点击更换验证码 1&lt;img border&#x3D;&quot;0&quot; src&#x3D;&quot;xxxx&quot; id&#x3D;&quot;validator&quot; οnclick&#x3D;&quot;this.src&#x3D;&#39;xxx?id&#x3D;&#39;+Math.random();&quot; title&#x3D;&quot;看不清可单击图片刷新&quot;&gt;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"js实现数组排序对象排序时间排序","slug":"js实现数组排序对象排序时间排序","date":"2020-08-17T03:32:39.201Z","updated":"2020-08-17T03:32:39.201Z","comments":true,"path":"2020/08/17/js实现数组排序对象排序时间排序/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/js%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E5%AF%B9%E8%B1%A1%E6%8E%92%E5%BA%8F%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/","excerpt":"sort()方法实现对象数组的排序,sort()方法会改变原数组，默认按unicode码顺序排列","text":"sort()方法实现对象数组的排序,sort()方法会改变原数组，默认按unicode码顺序排列 对象数组排序123456789101112131415161718192021var arr = [ &#123; name:\"小明\", age:12 &#125;, &#123; name:\"小红\", age:11 &#125;, &#123; name:\"小刚\", age:15 &#125;, &#123; name:\"小华\", age:13 &#125; ]; function compare(p)&#123; //这是比较函数 return function(m,n)&#123; var a = m[p]; var b = n[p]; return a - b; //升序 &#125;&#125;arr.sort(compare(\"age\"));console.log(arr); //结果如下： //[&#123;name: \"小红\", age: 11&#125;, //&#123;name: \"小明\", age: 12&#125;,//&#123;name: \"小华\", age: 13&#125;, //&#123;name: \"小刚\", age: 15&#125;] 数组排序 降序 12345var arr = [2,3,13,17,4,19,1];arr.sort(function(a,b)&#123; // 这是比较函数 return b - a; // 降序&#125;)console.log(arr) // 结果：[19, 17, 13, 4, 3, 2, 1] 升序 12345var arr = [2,3,13,17,4,19,1];arr.sort(function(a,b)&#123; // 这是比较函数 return a-b; // 降序&#125;)console.log(arr) // 结果：[1, 2, 3, 4, 13, 17, 19] 时间排序123arr.sort(function(a,b)&#123; return Date.parse(a.createTime) - Date.parse(b.createTime);&#125;);","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"laravel fillable 与 guarded","slug":"laravel fillable 与 guarded","date":"2020-08-17T03:32:39.201Z","updated":"2020-08-17T03:32:39.201Z","comments":true,"path":"2020/08/17/laravel fillable 与 guarded/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/laravel%20fillable%20%E4%B8%8E%20guarded/","excerpt":"","text":"fillable 与 guarded 官方解释 https://learnku.com/laravel/wikis/16126 fillable12345fillable 变量存储允许自动填充模型字段的数组，可以理解为字段修改 白名单，比如：protected $fillable = ['title', 'body', 'category_id'];那么你就可以进行批量赋值比如：$post = Post::create($request-&gt;all()); //批量创建数据 guarded12345guarded 变量存储不允许自动填充模型字段的数组，可以理解为字段修改 黑名单，比如：protected $guarded=['user_id'];$post = new Post($data);$post-&gt;user_id = Auth::id();$post-&gt;save();","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"js为按钮注册回车事件","slug":"js为按钮注册回车事件","date":"2020-08-17T03:32:39.200Z","updated":"2020-08-17T03:32:39.201Z","comments":true,"path":"2020/08/17/js为按钮注册回车事件/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/js%E4%B8%BA%E6%8C%89%E9%92%AE%E6%B3%A8%E5%86%8C%E5%9B%9E%E8%BD%A6%E4%BA%8B%E4%BB%B6/","excerpt":"","text":"12345document.οnkeydοwn=keyListener; function keyListener(e)&#123; if(e.keyCode == 13)&#123; &#125; &#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"hexo分类标签使用","slug":"hexo分类标签使用","date":"2020-08-17T03:32:39.200Z","updated":"2020-08-17T03:32:39.200Z","comments":true,"path":"2020/08/17/hexo分类标签使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/hexo%E5%88%86%E7%B1%BB%E6%A0%87%E7%AD%BE%E4%BD%BF%E7%94%A8/","excerpt":"","text":"创建分类选项进入hexo 目录，并输入 1hexo new page categories 然后进入source\\categories 并编辑index.md 12345---title: 文章分类date: 2019-12-31 12:48:30type: categories--- 创建标签选项进入hexo 目录，并输入 1hexo new page tags 然后进入source\\tags并编辑index.md 12345---title: 文章标签date: 2019-12-31 12:50:29type: &quot;tags&quot;--- 在所所需要分类或者标签的文章里面编辑123456---categories: - 编程开发tags:- 软件开发--- 注：分类只能输入一个","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"hexo安装使用部署","slug":"hexo安装使用部署","date":"2020-08-17T03:32:39.200Z","updated":"2020-08-17T03:32:39.200Z","comments":true,"path":"2020/08/17/hexo安装使用部署/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/hexo%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E9%83%A8%E7%BD%B2/","excerpt":"","text":"hexo 安装 环境配置 git nodejs hexo 环境安装 git安装（百度） nodejs安装（百度） hexo 安装 Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本 npm install -g hexo-cli hexo init 项目名 进入项目文件夹执行： npm install hexo-deployer-git –save 进入项目文件夹 hexo server 启动项目 或者使用yarn yarn global add hexo hexo使用 https://hexo.io/zh-cn/ 推荐多看看官方文档 github 登录github 创建一个新项目 获取git地址!如：https://github.com/xibaachao/xibaachao.github.io.git 主题更换 https://hexo.io/themes/ 下载一个主题 将主题文件夹拷贝到根目录下的/themes下 配置主题：打开根目录下的_config.yml 编辑theme：主题文件夹 编辑文章：在source\\_posts 发布文章，一个.md 就是一篇文章 配置github：打开根目录下的_config.yml 编辑deploy deploy: type: git repo: https://github.com/xibaachao/xibaachao.github.io.git branch: master hexo生成发布 1234hexo server //启动本地服务器hexo clean//为清除缓存hexo g //为生成本地文件夹hexo d //为发布到github page上 配置本地发布环境进入项目文件夹 123456git initgit checkout -b makegit add --allgit commit -m \"第一次提交\"git remote add origin https://github.com/xibaachao/xibaachao.github.io.gitgit push origin make 注：此操作是，把hexo发布工具上传到git 并创建了一个叫make的分支","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"docker安装配置","slug":"docker安装配置","date":"2020-08-17T03:32:39.199Z","updated":"2020-08-17T03:32:39.199Z","comments":true,"path":"2020/08/17/docker安装配置/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/docker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","excerpt":"yum install docker -y &amp; systemctl start docker &amp; systemctl enable docker","text":"yum install docker -y &amp; systemctl start docker &amp; systemctl enable docker docker 一键安装脚本 12curl -fsSL https://get.docker.com -o get-docker.shsh get-docker.sh 开启服务 1service docker start 或者 systemctl start docker 设置开机启动 1systemctl enable docker","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"go 随机数","slug":"go 随机数","date":"2020-08-17T03:32:39.199Z","updated":"2020-09-01T06:57:04.537Z","comments":true,"path":"2020/08/17/go 随机数/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/go%20%E9%9A%8F%E6%9C%BA%E6%95%B0/","excerpt":"","text":"go 语言生成100以内的随机数123rand.Seed(time.Now().UnixNano())Tmep:&#x3D;rand.Intn(100) go 生成15-100内的随机数123rand.Seed(time.Now().UnixNano())Tmep:&#x3D;rand.Intn(76)+15 生成范围区间内的随机数(n,m) 12rand.Seed(time.Now().UnixNano())Tmep:&#x3D;rand.Intn(m-n)+n &#x2F;&#x2F;比如 Tmep:&#x3D;rand.Intn(100-15+1)+15","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"GO","slug":"GO","permalink":"https://xibaachao.github.io/tags/GO/"}]},{"title":"ftp服务器搭建","slug":"ftp服务器搭建","date":"2020-08-17T03:32:39.199Z","updated":"2020-08-17T03:32:39.199Z","comments":true,"path":"2020/08/17/ftp服务器搭建/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/","excerpt":"yum install vsftpd -y","text":"yum install vsftpd -y 安装服务 123yum install vsftpd -y //安装软件systemctl restart vsftpd.service //重启软件systemctl enable vsftpd.service 创建用户 123useradd ftpuser //创建用户echo \"Password\" | passwd ftpuser --stdin //设置密码usermod -s /sbin/nologin ftpuser //禁止登陆 设置目录 12chmod 777 -R &#x2F;home&#x2F;www&#x2F;xxxx.com &#x2F;&#x2F;设置权限usermod -d &#x2F;home&#x2F;www&#x2F;xxxx.com ftpuser &#x2F;&#x2F;设置主目录 常见问题 530 Login incorrect 1、查看/etc/ftpusers ，确保账号没有在这个文件内。 2、修改/etc/pam.d/vsftpd 将auth required pam_shells.so修改为-&gt;auth required pam_nologin.so 即可 3、重启vsftpd","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"git常用命令","slug":"git常用命令","date":"2020-08-17T03:32:39.199Z","updated":"2020-08-17T03:32:39.199Z","comments":true,"path":"2020/08/17/git常用命令/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"git remote set-url origin https://~.git //修改远程分支 git merge &lt;branch&gt; //合并分支","text":"git remote set-url origin https://~.git //修改远程分支 git merge &lt;branch&gt; //合并分支 初始化git工作目录123git init &#x2F;&#x2F;初始化目录git clone &lt;url&gt; &#x2F;&#x2F;克隆远程git clone -b &lt;branch_name&gt; &lt;url&gt; &#x2F;&#x2F;克隆远程分支 追踪文件123git add . &#x2F;&#x2F;追踪所有改动过的问题件git add * &#x2F;&#x2F;追踪所有改动过的问题件git add &lt;file&gt; &#x2F;&#x2F;追踪指定文件 提交所有更新过的文件1git commit -m &quot;messages&quot; 撤销操作1234git reset --hard HEAD &#x2F;&#x2F;撤销工作目录中未提交的文件git checkout HEAD &lt;file&gt; &#x2F;&#x2F;撤销指定未修改的内容git revert HEAD &#x2F;&#x2F;撤销指定的commit git revert &#x2F;&#x2F;撤销上一次commit 分支123456789git branch &#x2F;&#x2F;显示本地分支git branch -a &#x2F;&#x2F;显示所有分支名称（包含本地和远程）git checkout &lt;bracnch&#x2F;tag&gt; &#x2F;&#x2F;切换到指定分支或者标签git checkout -b &lt;branch&gt; &#x2F;&#x2F;创建分支并切换分支git checkout -b &lt;new-branch&gt; origin &lt;branch&gt; &#x2F;&#x2F;获取远程分支并创建本地分支git branch &lt;new-branch&gt; &#x2F;&#x2F;创建分支git branch -d &lt;branch&gt; &#x2F;&#x2F;删除分支git remote set-url origin https:&#x2F;&#x2F;~.git &#x2F;&#x2F;修改远程分支git commit --amend &#x2F;&#x2F;修改最后一次commit -m 的内容 标签123git tag &#x2F;&#x2F;显示本地标签git tag -a &lt;tagname&gt; -m &quot;message&quot; &#x2F;&#x2F;创建标签git tag -d &lt;tagname&gt; &#x2F;&#x2F;删除标签 合并12git merge &lt;branch&gt; &#x2F;&#x2F;合并分支git rebase -i HEAD~4 &#x2F;&#x2F;合并最近4次commit 提交12git push &#x2F;&#x2F;提交当前分支git push origin &lt;branch&gt; &#x2F;&#x2F;提交指点远程分支 下载1git pull","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"cShare执行js脚本(v8.net)","slug":"cShare执行js脚本(v8.net)","date":"2020-08-17T03:32:39.198Z","updated":"2020-08-17T03:32:39.198Z","comments":true,"path":"2020/08/17/cShare执行js脚本(v8.net)/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/cShare%E6%89%A7%E8%A1%8Cjs%E8%84%9A%E6%9C%AC(v8.net)/","excerpt":"","text":"下载安装v8.net插件 后台c#代码 1234567var v8 &#x3D; new V8Engine();&#x2F;&#x2F;初始化string js &#x3D; File.ReadAllText(&quot;xxx.min.js&quot;);&#x2F;&#x2F;加载某个js插件Handle result &#x3D; v8.Execute(js);&#x2F;&#x2F;返回执行js完成后的值MessageBox.Show(result.ToString()); js代码 1234function temp()&#123; return \"xxxxx\";&#125;temp();","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://xibaachao.github.io/tags/C/"}]},{"title":"docker php 安装扩展程序 pcntl","slug":"docker php 安装扩展程序 pcntl","date":"2020-08-17T03:32:39.198Z","updated":"2020-08-17T03:32:39.198Z","comments":true,"path":"2020/08/17/docker php 安装扩展程序 pcntl/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/docker%20php%20%E5%AE%89%E8%A3%85%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%20pcntl/","excerpt":"","text":"docker 安装pcntl12cd /usr/local/bin/./docker-php-ext-install pcntl","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"docker 安装mysql驱动","slug":"docker 安装mysql驱动","date":"2020-08-17T03:32:39.198Z","updated":"2020-08-17T03:32:39.198Z","comments":true,"path":"2020/08/17/docker 安装mysql驱动/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/docker%20%E5%AE%89%E8%A3%85mysql%E9%A9%B1%E5%8A%A8/","excerpt":"","text":"安装mysql驱动12docker-php-ext-install pdo pdo_mysqldocker-php-ext-install mysqli","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"css图片居中-图片自适应","slug":"css图片居中-图片自适应","date":"2020-08-17T03:32:39.198Z","updated":"2020-08-17T03:32:39.198Z","comments":true,"path":"2020/08/17/css图片居中-图片自适应/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/css%E5%9B%BE%E7%89%87%E5%B1%85%E4%B8%AD-%E5%9B%BE%E7%89%87%E8%87%AA%E9%80%82%E5%BA%94/","excerpt":"","text":"图片居中 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; *&#123;margin: 0;padding: 0;&#125; li&#123; background-color: aqua; list-style: none; float: left; margin: 5px; width: 400px; height: 400px; &#125; .img_box&#123; width: 400px; height: 400px; text-align: center; vertical-align: middle; display: table-cell; &#125; .img_box img&#123; max-width: 100%; max-height: 100%; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;ul&gt; &lt;li&gt; &lt;div class=\"img_box\"&gt; &lt;img src=\"1.jpg\"&gt; &lt;/div&gt; &lt;/li&gt; &lt;li class=\"img_box\"&gt; &lt;div class=\"img_box\"&gt; &lt;img src=\"IMG_20190704_101448.jpg\"&gt; &lt;/div&gt; &lt;/li&gt; &lt;li class=\"img_box\"&gt; &lt;div class=\"img_box\"&gt; &lt;img src=\"2.jpeg\"&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/body&gt;&lt;/html&gt; 注： 1234567891011.img_box&#123; width: 400px; height: 400px; text-align: center; vertical-align: middle; display: table-cell; &#125; .img_box img&#123; max-width: 100%; max-height: 100%; &#125; .img_box ：表示图片的父级元素 需要设置父级元素的高、宽、居中对齐、垂直对齐、并将元素设置成表格单元格的模式。 .img_box img：图片则将最大宽高度设置成100%就可以了。","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"https://xibaachao.github.io/tags/CSS/"}]},{"title":"c# 操作显示器","slug":"c# 操作显示器","date":"2020-08-17T03:32:39.197Z","updated":"2020-08-17T03:32:39.197Z","comments":true,"path":"2020/08/17/c# 操作显示器/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/c#%20%E6%93%8D%E4%BD%9C%E6%98%BE%E7%A4%BA%E5%99%A8/","excerpt":"","text":"C#关闭显示器,打开显示器1234567891011121314private const uint WM_SYSCOMMAND &#x3D; 0x0112;private const uint SC_MONITORPOWER &#x3D; 0xF170; [DllImport(&quot;user32.dll&quot;)]public static extern IntPtr SendMessage(IntPtr hWnd, uint msg, uint wParam, int lParam);private void button1_Click(object sender, EventArgs e)&#123; SendMessage(Handle, WM_SYSCOMMAND, SC_MONITORPOWER, 2); &#x2F;&#x2F;关闭显示器; TopMost &#x3D; true; WindowState &#x3D; FormWindowState.Maximized; &#125;private void Form1_MouseMove(object sender, MouseEventArgs e)&#123; SendMessage(Handle, WM_SYSCOMMAND, SC_MONITORPOWER, -1); &#x2F;&#x2F;打开显示器;&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://xibaachao.github.io/tags/C/"}]},{"title":"c# 关闭程序退出","slug":"c# 关闭程序退出","date":"2020-08-17T03:32:39.197Z","updated":"2020-08-17T03:32:39.197Z","comments":true,"path":"2020/08/17/c# 关闭程序退出/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/c#%20%E5%85%B3%E9%97%AD%E7%A8%8B%E5%BA%8F%E9%80%80%E5%87%BA/","excerpt":"","text":"c# 关闭程序退出this.Close(); //只是关闭当前窗口，若不是主窗体的话，是无法退出程序的，另外若有托管线程（非主线程），也无法干净地退出； Application.Exit(); //强制所有消息中止，退出所有的窗体，但是若有托管线程（非主线程），也无法干净地退出； Application.ExitThread(); //强制中止调用线程上的所有消息，同样面临其它线程无法正确退出的问题； System.Environment.Exit(0); //这是最彻底的退出方式，不管什么线程都被强制退出，把程序结束的很干净，退出时有可能会抛出异常 System.Diagnostics.Process tt = System.Diagnostics.Process.GetProcessById(System.Diagnostics.Process.GetCurrentProcess().Id);tt.Kill();//直接杀死与本程序相关的所有进程，有可能会导致数据丢失，但是不会抛出异常。","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://xibaachao.github.io/tags/C/"}]},{"title":"c# 实现get post类库","slug":"c# 实现get post类库","date":"2020-08-17T03:32:39.197Z","updated":"2020-08-17T03:32:39.197Z","comments":true,"path":"2020/08/17/c# 实现get post类库/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/c#%20%E5%AE%9E%E7%8E%B0get%20post%E7%B1%BB%E5%BA%93/","excerpt":"c# 实现get post 提交 1234string url &#x3D; &quot;xxxxx&quot;; string data &#x3D; &quot;UserName&#x3D;admin&amp;Password&#x3D;123&quot;; string result &#x3D; HttpPost(url, data); string result &#x3D; HttpGet(url, data);","text":"c# 实现get post 提交 1234string url &#x3D; &quot;xxxxx&quot;; string data &#x3D; &quot;UserName&#x3D;admin&amp;Password&#x3D;123&quot;; string result &#x3D; HttpPost(url, data); string result &#x3D; HttpGet(url, data); get12345678910111213141516171819202122&#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; GET请求与获取结果 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; public static string HttpGet(string Url, string postDataStr) &#123; HttpWebRequest request &#x3D; (HttpWebRequest)WebRequest.Create(Url + (postDataStr &#x3D;&#x3D; &quot;&quot; ? &quot;&quot; : &quot;?&quot;) + postDataStr); request.Method &#x3D; &quot;GET&quot;; request.ContentType &#x3D; &quot;text&#x2F;html;charset&#x3D;UTF-8&quot;; HttpWebResponse response &#x3D; (HttpWebResponse)request.GetResponse(); Stream myResponseStream &#x3D; response.GetResponseStream(); StreamReader myStreamReader &#x3D; new StreamReader(myResponseStream, Encoding.UTF8); string retString &#x3D; myStreamReader.ReadToEnd(); myStreamReader.Close(); myResponseStream.Close(); return retString; &#125; string url &#x3D; &quot;http:&#x2F;&#x2F;www.mystudy.cn&#x2F;LoginHandler.aspx&quot;; string data &#x3D; &quot;UserName&#x3D;admin&amp;Password&#x3D;123&quot;; string result &#x3D; HttpGet(url, data); post123456789101112131415161718192021222324252627public static string HttpPost(string Url, string postDataStr) &#123; HttpWebRequest request &#x3D; (HttpWebRequest)WebRequest.Create(Url); request.Method &#x3D; &quot;POST&quot;; request.ContentType &#x3D; &quot;application&#x2F;x-www-form-urlencoded&quot;; request.ContentLength &#x3D; postDataStr.Length; StreamWriter writer &#x3D; new StreamWriter(request.GetRequestStream(),Encoding.ASCII); writer.Write(postDataStr); writer.Flush(); HttpWebResponse response &#x3D; (HttpWebResponse)request.GetResponse(); string encoding &#x3D; response.ContentEncoding; if (encoding &#x3D;&#x3D; null || encoding.Length &lt; 1) &#123; encoding &#x3D; &quot;UTF-8&quot;; &#x2F;&#x2F;默认编码 &#125; StreamReader reader &#x3D; new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(encoding)); string retString &#x3D; reader.ReadToEnd(); return retString; &#125; static void Main(string[] args) &#123; string url &#x3D; &quot;http:&#x2F;&#x2F;www.mystudy.cn&#x2F;LoginHandler.aspx&quot;; string data &#x3D; &quot;UserName&#x3D;admin&amp;Password&#x3D;123&quot;; string result &#x3D; HttpPost(url, data); Console.WriteLine(result); Console.ReadLine(); &#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://xibaachao.github.io/tags/C/"}]},{"title":"c#生成ip地址","slug":"c#生成ip地址","date":"2020-08-17T03:32:39.197Z","updated":"2020-08-17T03:32:39.197Z","comments":true,"path":"2020/08/17/c#生成ip地址/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/c#%E7%94%9F%E6%88%90ip%E5%9C%B0%E5%9D%80/","excerpt":"","text":"根据ip段批量生成ip地址1234567891011121314151617181920212223242526272829303132public List&lt;IPAddress&gt; makeip (string sip, string eip) &#123; List&lt;IPAddress&gt; list &#x3D; new List&lt;IPAddress&gt; (); uint iStartip &#x3D; ipTint (sip); uint iEndIp &#x3D; ipTint (eip); StringBuilder ip_result &#x3D; new StringBuilder (); if (iEndIp &gt;&#x3D; iStartip) &#123; for (uint ip &#x3D; iStartip; ip &lt;&#x3D; iEndIp; ip++) &#123; IPAddress iPAddress &#x3D; IPAddress.Parse (intTip (ip)); list.Add (iPAddress); &#125; &#125; else &#123; return null; &#125; return list;&#125;public uint ipTint (string ipStr) &#123; string[] ip &#x3D; ipStr.Split (&#39;.&#39;); uint ipcode &#x3D; 0xFFFFFF00 | byte.Parse (ip[3]); ipcode &#x3D; ipcode &amp; 0xFFFF00FF | (uint.Parse (ip[2]) &lt;&lt; 0x8); ipcode &#x3D; ipcode &amp; 0xFF00FFFF | (uint.Parse (ip[1]) &lt;&lt; 0xF); ipcode &#x3D; ipcode &amp; 0x00FFFFFF | (uint.Parse (ip[0]) &lt;&lt; 0x18); return ipcode;&#125;public string intTip (uint ipcode) &#123; byte a &#x3D; (byte) ((ipcode &amp; 0xFF000000) &gt;&gt; 0x18); byte b &#x3D; (byte) ((ipcode &amp; 0x00FF0000) &gt;&gt; 0xF); byte c &#x3D; (byte) ((ipcode &amp; 0x0000FF00) &gt;&gt; 0x8); byte d &#x3D; (byte) (ipcode &amp; 0x000000FF); string ipStr &#x3D; string.Format (&quot;&#123;0&#125;.&#123;1&#125;.&#123;2&#125;.&#123;3&#125;&quot;, a, b, c, d); return ipStr;&#125; 生成随机ip123456789101112131415161718public static string ipsite () &#123; Random sj &#x3D; new Random (); var s &#x3D; &quot;&quot;; for (int i &#x3D; 0; i &lt;&#x3D; 3; i++) &#123; var q &#x3D; sj.Next (0, 255).ToString (); if (i &lt; 3) &#123; s +&#x3D; (q + &quot;.&quot;).ToString (); &#125; else &#123; s +&#x3D; q.ToString (); &#125; &#125; var zz &#x3D; Regex.IsMatch (s, &quot;^((25[0-5]|2[0-4]\\\\d|((1\\\\d&#123;2&#125;)|([1-9]?\\\\d)))\\\\.)&#123;3&#125;(25[0-5]|2[0-4]\\\\d|((1\\\\d&#123;2&#125;)|([1-9]?\\\\d)))$&quot;); if (zz &#x3D;&#x3D; true) &#123; return s; &#125; else &#123; return &quot;&quot;; &#125;&#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://xibaachao.github.io/tags/C/"}]},{"title":"PHP插件swagger使用","slug":"PHP插件swagger使用","date":"2020-08-17T03:32:39.196Z","updated":"2020-08-17T03:32:39.196Z","comments":true,"path":"2020/08/17/PHP插件swagger使用/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/PHP%E6%8F%92%E4%BB%B6swagger%E4%BD%BF%E7%94%A8/","excerpt":"php swagger 使用","text":"php swagger 使用","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"Thinkphp常用命令","slug":"Thinkphp常用命令","date":"2020-08-17T03:32:39.196Z","updated":"2020-08-17T03:32:39.196Z","comments":true,"path":"2020/08/17/Thinkphp常用命令/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/Thinkphp%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"1234567891011121314151617181920212223242526272829Available commands: build Build Application Dirs clear Clear runtime file help Displays help for a command list Lists commands run PHP Built-in Server for ThinkPHP version show thinkphp framework version make make:command Create a new command class make:controller Create a new resource controller class make:middleware Create a new middleware class make:model Create a new model class make:validate Create a validate class migrate migrate:breakpoint Manage breakpoints migrate:create Create a new migration migrate:rollback Rollback the last or to a specific migration migrate:run Migrate the database migrate:status Show migration status optimize optimize:autoload Optimizes PSR0 and PSR4 packages to be loaded with classmaps too, good for production. optimize:config Build config and common file cache. optimize:route Build route cache. optimize:schema Build database schema cache. route route:list show route list. seed seed:create Create a new database seeder seed:run Run database seeders","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]},{"title":"CentOS查看和关闭防火墙","slug":"CentOS查看和关闭防火墙","date":"2020-08-17T03:32:39.195Z","updated":"2020-08-17T03:32:39.195Z","comments":true,"path":"2020/08/17/CentOS查看和关闭防火墙/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/CentOS%E6%9F%A5%E7%9C%8B%E5%92%8C%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/","excerpt":"","text":"CentOS7查看和关闭防火墙 查看防火墙 1firewall-cmd --state 停止firewall 1systemctl stop firewalld.service 禁止firewall开机启动 1systemctl disable firewalld.service 关闭selinux 123进入到&#x2F;etc&#x2F;selinux&#x2F;config文件vi &#x2F;etc&#x2F;selinux&#x2F;config将SELINUX&#x3D;enforcing改为SELINUX&#x3D;disabled","categories":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"Chrome浏览器默认打开无痕模式","slug":"Chrome浏览器默认打开无痕模式","date":"2020-08-17T03:32:39.195Z","updated":"2020-08-17T03:32:39.195Z","comments":true,"path":"2020/08/17/Chrome浏览器默认打开无痕模式/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E6%97%A0%E7%97%95%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"如何打开浏览器就是无痕模式 右键google浏览器快捷方式，选择属性。 弹出页面中选择快捷方式,并找到目标 在目标后面添加 -incognito 1&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot; -incognito","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"Laravel自定义分页样式","slug":"Laravel自定义分页样式","date":"2020-08-17T03:32:39.195Z","updated":"2020-08-17T03:32:39.196Z","comments":true,"path":"2020/08/17/Laravel自定义分页样式/","link":"","permalink":"https://xibaachao.github.io/2020/08/17/Laravel%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F/","excerpt":"Laravel 的分页组件默认为 Bootstrap 的分页样式，但如果我们用的并不是 Bootstrap 或者说分页的 HTML结构不一样，这时我们需要自定义分页。其实 Laravel 的分页组件是非常的灵活，可以通过几种方法去实现我们的需求。","text":"Laravel 的分页组件默认为 Bootstrap 的分页样式，但如果我们用的并不是 Bootstrap 或者说分页的 HTML结构不一样，这时我们需要自定义分页。其实 Laravel 的分页组件是非常的灵活，可以通过几种方法去实现我们的需求。 创建分页视图在 resources/views 目录下创建 pagination 目录，并创建一个视图default.blade.php 。添加一下代码： 12345678910111213141516171819202122232425262728293031323334353637&lt;div class=\"pagination\"&gt; &lt;ul&gt; &lt;li class=\"previous &#123;&#123; ($paginator-&gt;currentPage() == 1) ? ' disabled' : '' &#125;&#125;\"&gt; &lt;a href=\"&#123;&#123; $paginator-&gt;url(1) &#125;&#125;\"&gt;第一页&lt;/a&gt; &lt;/li&gt; &lt;li class=\"\"&gt; &lt;a href=\"&#123;&#123; $paginator-&gt;previousPageUrl() &#125;&#125;\"&gt;上一页&lt;/a&gt; &lt;/li&gt; @for ($i = 1; $i &lt;= $paginator-&gt;lastPage(); $i++) &lt;li class=\"&#123;&#123; ($paginator-&gt;currentPage() == $i) ? ' active' : '' &#125;&#125;\"&gt; &lt;a href=\"&#123;&#123; $paginator-&gt;url($i) &#125;&#125;\"&gt;&#123;&#123; $i &#125;&#125;&lt;/a&gt; &lt;/li&gt; @endfor &lt;li&gt; ••• &lt;/li&gt; &lt;li class=\"next\"&gt; &lt;a href=\"&#123;&#123; $paginator-&gt;nextPageUrl()&#125;&#125;\"&gt; 下一页 &lt;/a&gt; &lt;/li&gt; &lt;li&gt; 跳转&amp;nbsp;&lt;input type=\"text\" id=\"page\" style=\"text-align: center;\"&gt;&amp;nbsp;页 &lt;/li&gt; &lt;li class=\"active\"&gt; &lt;a href=\"javascript:go();\"&gt;GO&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;script&gt; function go(id)&#123; var page = document.getElementById(\"page\").value; var url = window.location.href+\"?&amp;page=\"+page; window.location.href=url; &#125;&lt;/script&gt; 其他常用常用函数说明$paginator-&gt;currentPage()：获取当前页 $paginator-&gt;lastPage()：获取尾页 $paginator-&gt;url($page)：获取页码的URL 具体参数参考：https://learnku.com/docs/laravel/7.x/pagination/7495#paginator-instance-methods","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"}]}],"categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://xibaachao.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"},{"name":"随笔","slug":"随笔","permalink":"https://xibaachao.github.io/categories/%E9%9A%8F%E7%AC%94/"},{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"软件推荐","slug":"软件推荐","permalink":"https://xibaachao.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://xibaachao.github.io/tags/PHP/"},{"name":"Mysql","slug":"Mysql","permalink":"https://xibaachao.github.io/tags/Mysql/"},{"name":"GO","slug":"GO","permalink":"https://xibaachao.github.io/tags/GO/"},{"name":"前端开发","slug":"前端开发","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"},{"name":"读后感","slug":"读后感","permalink":"https://xibaachao.github.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"},{"name":"其他","slug":"其他","permalink":"https://xibaachao.github.io/tags/%E5%85%B6%E4%BB%96/"},{"name":"服务器","slug":"服务器","permalink":"https://xibaachao.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"微信小程序开发","slug":"微信小程序开发","permalink":"https://xibaachao.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"},{"name":"软件使用","slug":"软件使用","permalink":"https://xibaachao.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"},{"name":"前端","slug":"前端","permalink":"https://xibaachao.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"php","slug":"php","permalink":"https://xibaachao.github.io/tags/php/"},{"name":"nginx","slug":"nginx","permalink":"https://xibaachao.github.io/tags/nginx/"},{"name":"linux","slug":"linux","permalink":"https://xibaachao.github.io/tags/linux/"},{"name":"C#","slug":"C","permalink":"https://xibaachao.github.io/tags/C/"},{"name":"CSS","slug":"CSS","permalink":"https://xibaachao.github.io/tags/CSS/"}]}